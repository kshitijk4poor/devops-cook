version: '3.8'

services:
  api:
    build: ./api
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - logstash
      - jaeger
    environment:
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
      - OTEL_TRACES_ENABLED=true
      - OTEL_SAMPLER=always_on
      - OTEL_SERVICE_NAME=api-service
      - OTEL_EXPORTER_JAEGER_AGENT_HOST=jaeger
      - OTEL_EXPORTER_JAEGER_AGENT_PORT=6831
      - OTEL_RESOURCE_ATTRIBUTES=service.name=api-service
      - OTEL_PYTHON_JAEGER_AGENT_HOST=jaeger
      - OTEL_PYTHON_JAEGER_AGENT_PORT=6831
      - OTEL_PYTHON_DISABLED_INSTRUMENTATIONS=""  # Enable all instrumentations

  jaeger:
    image: jaegertracing/all-in-one:1.35
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=9411
      - JAEGER_AGENT_PORT=6831
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:16686"]
      interval: 5s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - es_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    ports:
      - "5500:5000"
      - "5002:5002"
      - "9600:9600"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/dashboards:/usr/share/kibana/dashboards
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  setup-elasticsearch:
    image: curlimages/curl:latest
    volumes:
      - ./elasticsearch/setup.sh:/setup.sh
    command: ["/bin/sh", "/setup.sh"]
    depends_on:
      - elasticsearch
    restart: on-failure
    
  setup-kibana:
    image: curlimages/curl:latest
    volumes:
      - ./kibana/kibana_setup.sh:/setup.sh
    command: ["/bin/sh", "/setup.sh"]
    depends_on:
      - kibana
    restart: on-failure

volumes:
  es_data:
    driver: local
  grafana_data:
    driver: local 